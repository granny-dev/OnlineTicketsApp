@page "/movie/{movieId:int}"

@using OnlineTickets.Client.Services.MovieServices

@inject IMovieService MovieService
@inject IActorService ActorService
@inject ILocalStorageService LocalStorageService
@inject IToastService ToastService
@inject ICartService CartService
@inject NavigationManager NavigationManager

@if(movie is not null)
{
    <h3><b>@movie.MovieName Details</b></h3>

    <div class="media my-2">
        <div class="media-img-wrapper mr-2">
            <a href="">
                <img class="media-img" src="@movie.MovieImageUrl" alt="@movie.MovieName" />
            </a>
        </div>
        <div class="media-body">
            <a href="">
                <h4>@movie.MovieName</h4>
            </a>
            <h5><b>Category: </b>@movie.MovieCategory</h5>
            <p>@movie.MovieDescription</p>
            <a href="/producer/@movie.ProducerId">
                <h5><b>Producer: </b>@movie.ProducerName</h5>
            </a>
            <a href="/cinema/@movie.CinemaId">
                <h5><b>Cinema: </b>@movie.CinemaName</h5>
            </a>
            <h5><b>StartDate: </b>@movie.StartDate.ToShortDateString()</h5>
            <h5><b>EndDate: </b>@movie.EndDate.ToShortDateString()</h5>
            <h5><b>Status: </b>@movie.Status</h5>

            <div class="form-group my-2">
                <label for="date"><b>Select date</b></label>
                <InputDate id="date" @bind-Value="movie.SelectedDate" class="form-control" min="@movie.StartDate.ToString("yyyy-MM-dd")" max="@movie.EndDate.ToString("yyyy-MM-dd")" />

                <label for="dropdown"><b>Select row</b></label>
                <InputSelect id="dropdown" class="form-control edit-active" @bind-Value="movie.Places[0].PlaceName">
                    
                    @foreach (var place in movie.Places)
                    {
                        <option value="@place.PlaceName" @onselect="()=>movie.Places[0].PlaceName = place.PlaceName">@place.PlaceName</option>
                    }
                </InputSelect>
                <label for="qty"><b>How many tickets?</b></label>
                <InputNumber id="qty" @bind-Value="movie.Qty" class="form-control"></InputNumber>
            </div>
            @if (movie.Places[0].PlaceName == "FirstRow")
            {
                <p><b>Price: </b>$@(movie.Price *2)</p>
                <h5><b>Total price:</b>$@(movie.Price * 2 * movie.Qty)</h5>
            }
            else
            {
                <p><b>Price: </b>$@movie.Price</p>
                <h5><b>Total price:</b>$@(movie.Price * movie.Qty)</h5>
            }

            
            
            <button class="btn btn-outline-primary" @onclick="AddToCart">Add to cart</button>

            <h5 class="my-2"><b>Actors in @movie.MovieName</b></h5>
            <ul class="list-unstyled">
                @foreach (var actor in movieActors)
                {
                    <li class="media my-3">
                        <div class="media-img-wrapper mr-2">
                            <a href="/actor/@actor.ActorId">
                                <img class="media-img" src="@actor.ActorProfilePictureURL" alt="@actor.ActorName" />
                            </a>
                        </div>
                        <div class="media-body">
                            <a href="/actor/@actor.ActorId">
                                <h4>@actor.ActorName</h4>
                            </a>
                            <p>@actor.ActorBiography</p>
                        </div>
                    </li>
                }
            </ul>

        </div>
    </div>
}



@code {
    [Parameter]
    public int MovieId{ get; set; }

    Movie? movie;

    List<Actor> movieActors = new List<Actor>();

    protected override async Task OnInitializedAsync()
    {
        movie = await MovieService.GetMovieById(MovieId);

        await ActorService.GetActorsList();

        foreach (var actor in ActorService.Actors)
        {
            if (actor.MovieId == MovieId)
            {
                movieActors.Add(actor);
            }
        }
    }

    async Task AddToCart()
    {
        if (movie.Places[0].PlaceName == "FirstRow")
        {
            movie.Price *= 2;
        }
        await CartService.AddToCart(movie);

        NavigationManager.NavigateTo("/cart");
    }
}
